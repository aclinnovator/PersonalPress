
module.exports = function(Gamify) {
	
	var mongo	= new Gamify.mongo({database:Gamify.settings.db});
	mongo.init(function() {
		
	});
	
	var caching = function(ttl) {
		this.ttl 	= ttl;
		this.cache 	= {};
		var scope = this;
		setInterval(function() {
			var i;
			var t = new Date().getTime();
			for (i in scope.cache) {
				if (scope.cache[i].expires < t) {
					delete scope.cache[i];
				}
			}
		}, this.ttl/2);
	};
	caching.prototype.set = function(label, value) {
		//Gamify.log("set()", [label, value]);
		var expires = new Date().getTime()+this.ttl;
		this.cache[label] = {
			data:		value,
			expires:	expires
		}
		return expires;
	}
	caching.prototype.get = function(label) {
		if (this.cache[label]) {
			return this.cache[label].data;
		}
		return null;
	};
	caching.prototype.clear = function(label) {
		//Gamify.log("clear",label);
		delete this.cache[label];
	};
	
	var cache = new caching(1000*20);	// 20sec session caching
	
	return function(req, res, next) {
		
		// If there is a request to clear the cache, we do it.
		if (req.cookies.refresh_session_cache) {
			cache.clear(req.cookies.session_key);
			
			// Now we remove that cookie
			res.cookie('refresh_session_cache', false, {
				path:	'/',
				maxAge: -1
			});
		}
		
		//if (req.session && req.session.passport && req.session.passport.user) {
		
		// If there is a logged in user but no cookie, we set that cookie.
		if (req.session && req.session.passport && req.session.passport.user && !req.cookies.session_key) {
			// Set the session cookie
			// We only save the apikey in the cookie
			res.cookie('session_key', req.session.passport.user.apikey, {
				path:	'/',
				maxAge: 1000*60*60*24*14
			});
		}
		
		if (req.cookies.session_key) {
			//Gamify.log(">> SESSION", 'Has session_key');
			// Check if we have that user in the cache already.
			var cached = cache.get(req.cookies.session_key);
			
			if (cached != null) {
				//Gamify.log(">> SESSION", 'Has a cache');
				// If we have the user in the cache, return that user
				if (!req.session) {
					req.session = {};
				}
				if (!req.session.passport) {
					req.session.passport = {};
				}
				req.session.passport.user = req.user = cached;
				next();
			} else {
				//Gamify.log(">> SESSION", 'No cache');
				// If we don't have the user in the cache, we fetch and return that user
				mongo.find({
					collection:	"users",
					query:	{
						apikey:	req.cookies.session_key
					}
				}, function(response) {
					if (response.length == 0) {
						//Gamify.log(">> SESSION", 'User not found');
						// Remove the cookie
						res.clearCookie('session_key');
						// empty the user session
						if (!req.session) {
							req.session = {};
						}
						if (!req.session.passport) {
							req.session.passport = {};
						}
						req.session.passport.user = req.user = null;
						next();
					} else {
						//Gamify.log(">> SESSION", 'User found');
						//Gamify.log(">> user response", response[0]);
						cache.set(req.cookies.session_key, response[0]);
						if (!req.session) {
							req.session = {};
						}
						if (!req.session.passport) {
							req.session.passport = {};
						}
						req.session.passport.user = req.user = response[0];
						next();
					}
				});
			}
		} else {
			//Gamify.log(">> SESSION", 'No session_key');
			next();
		}
	};
};
